swagger: '2.0'
info:
  title: Bank Argent API Documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for user login
      parameters:
        - in: body
          name: body
          description: Login payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Successful login
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid fields
        '500':
          description: Internal server error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for user signup
      parameters:
        - in: body
          name: body
          description: Signup payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Successful signup
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid fields
        '500':
          description: Internal server error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API to retrieve user profile
      responses:
        '200':
          description: Successfully retrieved user profile
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid fields
        '500':
          description: Internal server error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API to update user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: Successfully updated user profile
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid fields
        '500':
          description: Internal server error
  /user/profile/transactions/{accountId}:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Retrieve all transactions
      description: Retrieve all transactions for the current month, grouped by account
      parameters:
        - name: accountId
          in: path
          description: Filter transactions by account ID
          required: true
          type: string
      responses:
        '200':
          description: Operation successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Transaction'
        '400':
          description: Invalid query parameter
        '500':
          description: Server error
  /transactions/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Retrieve transaction details
      description: Retrieve detailed information for a specific transaction
      parameters:
        - name: transactionId
          in: path
          description: The ID of the transaction
          required: true
          type: string
      responses:
        '200':
          description: Successfully retrieved transaction details
          schema:
            $ref: '#/definitions/TransactionDetails'
        '404':
          description: Transaction not found
        '500':
          description: Server error
    put:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Update a transaction
      description: Update the information of a specific transaction
      parameters:
        - name: transactionId
          in: path
          description: The ID of the transaction
          required: true
          type: string
        - in: body
          name: body
          description: The new transaction data
          required: true
          schema:
            $ref: '#/definitions/TransactionDetails'
      responses:
        '200':
          description: Successfully updated transaction
          schema:
            $ref: '#/definitions/TransactionDetails'
        '400':
          description: Invalid input data
        '404':
          description: Transaction not found
        '500':
          description: Server error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: User email
      password:
        type: string
        description: User password
      firstName:
        type: string
        description: User's first name
      lastName:
        type: string
        description: User's last name
      userName:
        type: string
        description: User's public name
  Login:
    properties:
      email:
        type: string
        description: User email
      password:
        type: string
        description: User password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  Transaction:
    type: object
    properties:
      transactionId:
        type: string
      date:
        type: string
        format: date
      description:
        type: string
      amount:
        type: number
      balance:
        type: number
      transactionType:
        type: string
      category:
        type: string
      note:
        type: string
  TransactionDetails:
    type: object
    properties:      
      transactionType:
        type: string
      category:
        type: string
      note:
        type: string
